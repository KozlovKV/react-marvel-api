{"version":3,"file":"static/js/972.65a6e93b.chunk.js","mappings":"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","sources":["components/animatedAppearance/AnimatedAppearance.js","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charFindForm/CharFindForm.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import { CSSTransition } from \"react-transition-group\";\r\n\r\nimport './animatedAppearance.scss';\r\n\r\nexport default function AnimatedAppearance(props) {\r\n\treturn <CSSTransition\r\n\t\t{...props} timeout={300}\r\n\t\tclassNames=\"appearance\">\r\n\t\t<>\r\n\t\t\t{props.children}\r\n\t\t</>\r\n\t</CSSTransition>\r\n}","import errorGif from './error.gif';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn <img src={errorGif} alt=\"Error gif\" />\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport AnimatedAppearance from \"../animatedAppearance/AnimatedAppearance\";\r\n\r\nimport useMarvelService from './../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\n\r\nimport mjolnirImg from '../../resources/img/mjolnir.png';\r\n\r\nexport default function RandomChar() {\r\n\r\n\tconst [char, setChar] = useState({}),\r\n\t\t{ loading, error, getCharacter } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = () => {\r\n\t\tlet randomId = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\t\tgetCharacter(randomId)\r\n\t\t\t.then(onCharLoaded);\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(updateChar, []);\r\n\r\n\tconst spinner = loading ? <Spinner width=\"250px\" /> : null;\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst randomCharBlock = !(loading || error) && char.id ? <RandomCharBlock char={char} /> : null;\r\n\treturn (\r\n\t\t<div className=\"randomchar\">\r\n\t\t\t<AnimatedAppearance in={loading}>\r\n\t\t\t\t{spinner}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t\t<AnimatedAppearance in={!loading}>\r\n\t\t\t\t{randomCharBlock}\r\n\t\t\t\t{errorMessage}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t\t<div className=\"randomchar__static\">\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tRandom character for today!<br />\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tOr choose another one\r\n\t\t\t\t</p>\r\n\t\t\t\t<button className=\"button button__main\" onClick={updateChar}>\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={mjolnirImg} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction RandomCharBlock({ char }) {\r\n\tconst { thumbnail, name, homepageUrl, wikiUrl, shortedDescription } = char;\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar__block\">\r\n\t\t\t<img src={thumbnail.url} alt={name} className=\"randomchar__img\" style={thumbnail.style} />\r\n\t\t\t<div className=\"randomchar__info\">\r\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\r\n\t\t\t\t<p className=\"randomchar__descr\">\r\n\t\t\t\t\t{shortedDescription}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"randomchar__btns\">\r\n\t\t\t\t\t<a href={homepageUrl} className=\"button button__main\">\r\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href={wikiUrl} className=\"button button__secondary\">\r\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport AnimatedAppearance from \"../animatedAppearance/AnimatedAppearance\";\r\nimport useMarvelService, { _getCharactersMaxOffset, _getCharactersBaseOffset } from \"../../services/MarvelService\";\r\n\r\nimport './charList.scss';\r\n\r\nexport default function CharList(props) {\r\n\tconst _loadMoreDelta = 9;\r\n\r\n\tconst [characters, setCharacters] = useState([]),\r\n\t\t{ loading, error, getCharacters } = useMarvelService();\r\n\r\n\tconst onCharactersLoaded = (newCharacters) => {\r\n\t\tsetCharacters(characters => [...characters, ...newCharacters]);\r\n\t}\r\n\r\n\tconst loadCharacters = () => {\r\n\t\tconst offset = characters.length;\r\n\t\tgetCharacters(offset, _loadMoreDelta)\r\n\t\t\t.then(onCharactersLoaded);\r\n\t}\r\n\r\n\tconst getCharItems = () => {\r\n\t\treturn characters.map((char, i) => {\r\n\t\t\tconst { thumbnail, name, id } = char, { selectedCharId, onCharSelected } = props;\r\n\t\t\tconst classes = `char__item ${selectedCharId === id ? 'char__item_selected' : ''}`;\r\n\t\t\treturn (\r\n\t\t\t\t<li className={classes} tabIndex=\"0\" role=\"treeitem\"\r\n\t\t\t\t\tonFocus={() => onCharSelected(id)} key={i} data-id={id}>\r\n\t\t\t\t\t<img src={thumbnail.url} alt={name} style={thumbnail.style} />\r\n\t\t\t\t\t<div className=\"char__name\">{name}</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tconst canLoadMore = () => characters.length < _getCharactersMaxOffset - _getCharactersBaseOffset;\r\n\tconst getLoadMoreButton = () => {\r\n\t\tconst canLoadMoreAnswer = canLoadMore();\r\n\t\treturn <button className=\"button button__main button__long\"\r\n\t\t\tonClick={onLoadMore} disabled={!canLoadMoreAnswer}\r\n\t\t\ttabIndex=\"0\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t{canLoadMoreAnswer ? \"load more\" : \"All characters loaded\"}\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t}\r\n\r\n\tconst onLoadMore = () => {\r\n\t\tif (canLoadMore()) {\r\n\t\t\tloadCharacters();\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(loadCharacters, []);\r\n\r\n\tconst spinner = loading ? <Spinner width=\"250px\" /> : null;\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst button = !loading ? getLoadMoreButton() : null;\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t<AnimatedAppearance in={!loading} unmountOnExit>\r\n\t\t\t\t<ul className=\"char__grid\">\r\n\t\t\t\t\t{getCharItems()}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t{button}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t\t<AnimatedAppearance in={loading} mountOnEnter>\r\n\t\t\t\t{spinner}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t</div>\r\n\t);\r\n}","import './skeleton.scss';\r\n\r\nexport default function Skeleton() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\r\n\t\t\t<div className=\"skeleton\">\r\n\t\t\t\t<div className=\"pulse skeleton__header\">\r\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\r\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\nimport AnimatedAppearance from \"../animatedAppearance/AnimatedAppearance\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport './charInfo.scss';\r\n\r\n\r\nexport default function CharInfo(props) {\r\n\r\n\tconst [char, setChar] = useState(null),\r\n\t\t{ loading, error, getCharacter } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateCharInfo = () => {\r\n\t\tconst { selectedCharId } = props;\r\n\t\tif (selectedCharId) {\r\n\t\t\tgetCharacter(selectedCharId)\r\n\t\t\t\t.then(onCharLoaded);\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(updateCharInfo, [props.selectedCharId]);\r\n\r\n\tconst skeleton = char || loading || error ? null : <Skeleton />,\r\n\t\tspinner = loading ? <Spinner /> : null,\r\n\t\terrorMessage = error ? <ErrorMessage /> : null,\r\n\t\tcharInfoBlock = !(loading || error || !char) ? <CharInfoBlock char={char} /> : null;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t{skeleton}\r\n\t\t\t<AnimatedAppearance in={loading}>\r\n\t\t\t\t{spinner}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t\t<AnimatedAppearance in={!loading}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t{charInfoBlock}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst CharInfoBlock = ({ char }) => {\r\n\tconst { thumbnail, name, homepageUrl, wikiUrl, description, comics } = char;\r\n\tlet comicsElements = comics.map(\r\n\t\tcomic =>\r\n\t\t\t<li className=\"char__comics-item\" key={comic.name}>\r\n\t\t\t\t{comic.name}\r\n\t\t\t</li>\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={thumbnail.url} alt={name} style={thumbnail.style} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"char__btns\">\r\n\t\t\t\t\t\t<a href={homepageUrl} className=\"button button__main\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href={wikiUrl} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{comicsElements.length > 0 ? comicsElements.slice(0, 10) : 'No comics with this character'}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './charFindForm.scss';\r\n\r\nexport default function CharFindForm(props) {\r\n\tconst { loading, getCharactersByNamePart } = useMarvelService();\r\n\tconst [chars, setChars] = useState([]);\r\n\r\n\tfunction getCharsResultList() {\r\n\t\tif (loading) return <Spinner width=\"150px\" />;\r\n\t\tif (!chars.length) return null;\r\n\t\treturn <>\r\n\t\t\t<h3 className=\"success\">\r\n\t\t\t\tFounded {chars.length} char{chars.length > 1 ? 's' : ''}\r\n\t\t\t</h3>\r\n\t\t\t<ul className=\"char__find__results-list\">\r\n\t\t\t\t{chars.map(char =>\r\n\t\t\t\t\t<li key={char.id} className=\"row char__find__results-item\">\r\n\t\t\t\t\t\t<h4>{char.name}</h4>\r\n\t\t\t\t\t\t<Link to={`/chars/${char.id}`} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">char page</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t}\r\n\r\n\treturn <div className=\"char__find\">\r\n\t\t<h3>Or find a characters by name:</h3>\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ name: '' }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tname: Yup.string().required('Name is required').min(2, '2 symbols minimum')\r\n\t\t\t})}\r\n\t\t\tonSubmit={({ name }) => {\r\n\t\t\t\tgetCharactersByNamePart(name)\r\n\t\t\t\t\t.then(setChars);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Form className=\"char__find__form row\">\r\n\t\t\t\t<Field name=\"name\" placeholder=\"Enter name\" />\r\n\t\t\t\t<button type=\"submit\" className=\"button button__main\">\r\n\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<ErrorMessage name=\"name\" className=\"error\" component=\"h3\" />\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t\t{getCharsResultList()}\r\n\t</div>\r\n}","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error } = this.state, { children } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{error ? <ErrorMessage /> : children}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","import { useState } from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport CharFindForm from '../charFindForm/CharFindForm';\r\n\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport bgDecoration from '../../resources/img/vision.png';\r\n\r\nexport default function MainPage() {\r\n\tconst [selectedCharId, setSelectedCharId] = useState(0);\r\n\r\n\tconst onCharSelected = (selectedCharId) => setSelectedCharId(selectedCharId);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList selectedCharId={selectedCharId} onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo selectedCharId={selectedCharId} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharFindForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={bgDecoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n}","import useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelService() {\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n\tconst _apiKey = 'apikey=d840bc106aeea955689856e89bb25220';\r\n\tconst {loading, error, request} = useHttp();\r\n\r\n\tasync function get(urlPrefix, getParametersObject) {\r\n\t\tlet getParametersList = [_apiKey];\r\n\t\tfor (let key in getParametersObject) {\r\n\t\t\tgetParametersList.push(`${key}=${getParametersObject[key]}`);\r\n\t\t}\r\n\t\tlet requestUrl = `${_apiBase}/${urlPrefix}?${getParametersList.join('&')}`;\r\n\t\treturn request(requestUrl);\r\n\t}\r\n\r\n\tasync function getCharacters(offsetDelta, limit = 9) {\r\n\t\tlimit = limit <= _getCharactersMaxLimit ? limit : _getCharactersMaxLimit;\r\n\t\tlet offset = _getCharactersBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getCharactersMaxOffset ? offset : _getCharactersMaxOffset;\r\n\t\tconst result = await get('characters', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharactersByNamePart(name) {\r\n\t\tconst result = await get('characters', { nameStartsWith: name, limit: 100 })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharacter(id) {\r\n\t\tconst result = await get(`characters/${id}`)\r\n\t\treturn _getProcessedCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedCharacter(charObj) {\r\n\t\tconst { id, name, urls, comics } = charObj;\r\n\t\tlet thumbnail = _getThumbnailObj(charObj.thumbnail),\r\n\t\t\thomepageUrl = urls[0].url,\r\n\t\t\twikiUrl = urls[1].url,\r\n\t\t\tdescription = !charObj.description ? 'Description not found' : charObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description);\r\n\t\treturn {\r\n\t\t\tid, name, description, thumbnail, homepageUrl, wikiUrl, shortedDescription, comics: comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getComics(offsetDelta, limit = 8) {\r\n\t\tlimit = limit <= _getComicsMaxLimit ? limit : _getComicsMaxLimit;\r\n\t\tlet offset = _getComicsBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getComicsMaxOffset ? offset : _getComicsMaxOffset;\r\n\t\tconst result = await get('comics', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedComic);\r\n\t}\r\n\r\n\tasync function getComic(comicId) {\r\n\t\tconst result = await get(`comics/${comicId}`);\r\n\t\treturn _getProcessedComic(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedComic(comicObj) {\r\n\t\tconst { id, title, pageCount } = comicObj;\r\n\t\tlet thumbnail = _getThumbnailObj(comicObj.thumbnail),\r\n\t\t\tprice = comicObj.prices[0].price,\r\n\t\t\tdescription = !comicObj.description ? 'Description not found' : comicObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description),\r\n\t\t\tlanguage= comicObj.textObjects.language || 'en-us';\r\n\t\treturn {\r\n\t\t\tid, title, pageCount, price, description, thumbnail, shortedDescription, language,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading, \r\n\t\terror, \r\n\t\tgetCharacter, \r\n\t\tgetCharacters, \r\n\t\tgetCharactersByNamePart, \r\n\t\tgetComic, \r\n\t\tgetComics\r\n\t};\r\n}\r\n\r\nconst _getCharactersMaxLimit = 100;\r\nexport const _getCharactersBaseOffset = 210;\r\nexport const _getCharactersMaxOffset = 1561;\r\n\r\nconst _getComicsMaxLimit = 100;\r\nexport const _getComicsBaseOffset = 0;\r\nexport const _getComicsMaxOffset = 1561;\r\n\r\nconst _maxShortedDescriptionLength = 190;\r\nfunction _getShortedDescription(description) {\r\n\tif (description.length <= _maxShortedDescriptionLength) {\r\n\t\treturn description;\r\n\t}\r\n\r\n\tlet words = description.split(' '), charLen = 0, i = 0;\r\n\twords.forEach((word, index) => {\r\n\t\tif (\r\n\t\t\tcharLen + word.length <= _maxShortedDescriptionLength &&\r\n\t\t\tindex - i <= 1\r\n\t\t) {\r\n\t\t\tcharLen += word.length;\r\n\t\t\ti = index;\r\n\t\t}\r\n\t})\r\n\treturn words.slice(0, i).join(' ') + '…';\r\n}\r\n\r\nconst _imgNotAvailableUrlParts = ['4c002e0305708', 'image_not_available']\r\nfunction _getThumbnailObj(thumbnail) {\r\n\tlet thumbnailObj = {\r\n\t\turl: thumbnail.path + '.' + thumbnail.extension,\r\n\t\tstyle: {}\r\n\t}\r\n\tif (_imgNotAvailableUrlParts.some(\r\n\t\turlPart => thumbnail.path.indexOf(urlPart) > -1\r\n\t)) {\r\n\t\tthumbnailObj.style.objectFit = 'contain';\r\n\t}\r\n\treturn thumbnailObj;\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst request = useCallback(async function(url, method='GET', body=null, \r\n\t\t\t\t\theaders={'Content-Type': 'application/json'}) {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\tif (!response.ok) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true);\r\n\t\t\tthrow new Error(`Can't fetch url ${url}, error ${response.status}: ${response.statusText}`);\r\n\t\t}\r\n\t\tconst responseBody = await response.json();\r\n\t\tsetLoading(false);\r\n\t\tsetError(false);\r\n\t\treturn responseBody;\r\n\t}, []);\r\n\r\n\treturn {loading, error, request};\r\n}"],"names":["AnimatedAppearance","props","CSSTransition","timeout","classNames","children","ErrorMessage","src","errorGif","alt","RandomChar","useState","char","setChar","useMarvelService","loading","error","getCharacter","onCharLoaded","updateChar","randomId","Math","floor","random","then","useEffect","spinner","Spinner","width","errorMessage","randomCharBlock","id","RandomCharBlock","className","in","onClick","mjolnirImg","thumbnail","name","homepageUrl","wikiUrl","shortedDescription","url","style","href","CharList","characters","setCharacters","getCharacters","onCharactersLoaded","newCharacters","loadCharacters","offset","length","canLoadMore","_getCharactersMaxOffset","_getCharactersBaseOffset","onLoadMore","button","canLoadMoreAnswer","disabled","tabIndex","getLoadMoreButton","unmountOnExit","map","i","selectedCharId","onCharSelected","classes","role","onFocus","mountOnEnter","Skeleton","CharInfo","skeleton","charInfoBlock","CharInfoBlock","description","comicsElements","comics","comic","slice","CharFindForm","getCharactersByNamePart","chars","setChars","initialValues","validationSchema","Yup","required","min","onSubmit","placeholder","type","component","to","ErrorBoundary","state","errorInfo","console","log","this","setState","Component","MainPage","setSelectedCharId","bgDecoration","_apiBase","_apiKey","setLoading","setError","request","useCallback","method","body","headers","fetch","response","ok","Error","status","statusText","json","responseBody","useHttp","get","urlPrefix","getParametersObject","key","getParametersList","push","requestUrl","join","offsetDelta","limit","_getCharactersMaxLimit","result","data","results","_getProcessedCharacter","nameStartsWith","charObj","urls","_getThumbnailObj","_getShortedDescription","items","_getComicsMaxLimit","_getComicsBaseOffset","_getComicsMaxOffset","_getProcessedComic","comicId","comicObj","title","pageCount","price","prices","language","textObjects","getComic","getComics","words","split","charLen","forEach","word","index","_imgNotAvailableUrlParts","thumbnailObj","path","extension","some","urlPart","indexOf","objectFit"],"sourceRoot":""}