{"version":3,"file":"static/js/788.4665e715.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/singleItem/SingleItem.js","components/pages/SingleItemPage.js","hocs/withFiniteState.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\r\n\r\nimport avengersImg from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nexport default function AppBanner(props) {\r\n\treturn (\r\n\t\t<div className=\"app__banner\">\r\n\t\t\t<img src={avengersImg} alt=\"Avengers\" />\r\n\t\t\t<div className=\"app__banner-text\">\r\n\t\t\t\tNew comics every week!<br />\r\n\t\t\t\tStay tuned!\r\n\t\t\t</div>\r\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\r\n\t\t</div>\r\n\t);\r\n}","import errorGif from './error.gif';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn <img src={errorGif} alt=\"Error gif\" />\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport withFiniteState from '../../hocs/withFiniteState';\r\n\r\nimport './singleItem.scss';\r\n\r\nconst SingleItemWithFiniteState = withFiniteState();\r\n\r\nexport default function SingleComic(props) {\r\n\tconst { itemId, dataType } = props;\r\n\tconst { processState, setProcessState, getComic, getCharacter } = useMarvelService();\r\n\tconst typeParams = {\r\n\t\tchar: {\r\n\t\t\tgetData: getCharacter,\r\n\t\t\tDataBlock: CharBlock,\r\n\t\t},\r\n\t\tcomic: {\r\n\t\t\tgetData: getComic,\r\n\t\t\tDataBlock: ComicBlock,\r\n\t\t}\r\n\t}\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\ttypeParams[dataType]\r\n\t\t\t.getData(itemId)\r\n\t\t\t.then(setData)\r\n\t\t\t.then(() => setProcessState('success'));\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [itemId]);\r\n\r\n\tconst BlockComponent = typeParams[dataType].DataBlock;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SingleItemWithFiniteState state={processState}>\r\n\t\t\t\t<BlockComponent {...data} />\r\n\t\t\t</SingleItemWithFiniteState>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction BaseSingleItemBlock(props) {\r\n\tconst { thumbnail, title, description, children, backPath } = props;\r\n\treturn <div className=\"single-item\">\r\n\t\t<Helmet>\r\n\t\t\t<meta name=\"description\" content=\"All Marvel's comics\" />\r\n\t\t\t<title>{title}</title>\r\n\t\t</Helmet>\r\n\t\t<img src={thumbnail.url} alt={title}\r\n\t\t\tclassName=\"single-item__img\" style={thumbnail.style} />\r\n\t\t<div className=\"single-item__info\">\r\n\t\t\t<h2 className=\"single-item__name\">{title}</h2>\r\n\t\t\t<p className=\"single-item__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</p>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t\t<Link to={backPath} className=\"single-item__back\">Back to all</Link>\r\n\t</div>;\r\n}\r\n\r\nfunction ComicBlock({ pageCount, language, price, ...props }) {\r\n\treturn <BaseSingleItemBlock backPath=\"/comics\" {...props}>\r\n\t\t<Helmet>\r\n\t\t\t<meta name=\"description\" content={`${props.title} comic`} />\r\n\t\t</Helmet>\r\n\t\t<p className=\"single-item__descr\">{pageCount} pages</p>\r\n\t\t<p className=\"single-item__descr\">Language: {language}</p>\r\n\t\t<div className=\"single-item__price\">\r\n\t\t\t{price ? `${price}$` : 'Not available'}\r\n\t\t</div>\r\n\t</BaseSingleItemBlock>;\r\n}\r\n\r\nfunction CharBlock(props) {\r\n\treturn <BaseSingleItemBlock backPath=\"/chars\" title={props.name} {...props}>\r\n\t\t<Helmet>\r\n\t\t\t<meta name=\"description\" content={`${props.name} character`} />\r\n\t\t</Helmet>\r\n\t</BaseSingleItemBlock>\r\n}","import { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport SingleItem from '../singleItem/SingleItem';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nexport default function SingleItemPage() {\r\n\tconst parapms = useParams();\r\n\tconst type = useLocation().pathname.match('char') ? 'char' : 'comic';\r\n\r\n\treturn ( <>\r\n\t\t<AppBanner />\r\n\t\t<SingleItem itemId={parapms.id} dataType={type} />\r\n\t</>\r\n\t);\r\n}","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nexport default function withFiniteState(modifiedActions) {\r\n\tconst stateActions = {\r\n\t\twaiting: () => {},\r\n\t\tloading: () => <Spinner />,\r\n\t\terror: () => <ErrorMessage />,\r\n\t\tfetched: () => {},\r\n\t\tsuccess: ({children}) => <>{children}</>,\r\n\t\t...modifiedActions\r\n\t}\r\n\treturn ({state, ...props}) => {\r\n\t\treturn stateActions[state](props);\r\n\t}\r\n}","import useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelService() {\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n\tconst _apiKey = 'apikey=d840bc106aeea955689856e89bb25220';\r\n\tconst {loading, error, processState, setProcessState, request} = useHttp();\r\n\r\n\tasync function get(urlPrefix, getParametersObject) {\r\n\t\tlet getParametersList = [_apiKey];\r\n\t\tfor (let key in getParametersObject) {\r\n\t\t\tgetParametersList.push(`${key}=${getParametersObject[key]}`);\r\n\t\t}\r\n\t\tlet requestUrl = `${_apiBase}/${urlPrefix}?${getParametersList.join('&')}`;\r\n\t\treturn request(requestUrl);\r\n\t}\r\n\r\n\tasync function getCharacters(offsetDelta, limit = 9) {\r\n\t\tlimit = limit <= _getCharactersMaxLimit ? limit : _getCharactersMaxLimit;\r\n\t\tlet offset = _getCharactersBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getCharactersMaxOffset ? offset : _getCharactersMaxOffset;\r\n\t\tconst result = await get('characters', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharactersByNamePart(name) {\r\n\t\tconst result = await get('characters', { nameStartsWith: name, limit: 100 })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharacter(id) {\r\n\t\tconst result = await get(`characters/${id}`)\r\n\t\treturn _getProcessedCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedCharacter(charObj) {\r\n\t\tconst { id, name, urls, comics } = charObj;\r\n\t\tlet thumbnail = _getThumbnailObj(charObj.thumbnail),\r\n\t\t\thomepageUrl = urls[0].url,\r\n\t\t\twikiUrl = urls[1].url,\r\n\t\t\tdescription = !charObj.description ? 'Description not found' : charObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description);\r\n\t\treturn {\r\n\t\t\tid, name, description, thumbnail, homepageUrl, wikiUrl, shortedDescription, comics: comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getComics(offsetDelta, limit = 8) {\r\n\t\tlimit = limit <= _getComicsMaxLimit ? limit : _getComicsMaxLimit;\r\n\t\tlet offset = _getComicsBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getComicsMaxOffset ? offset : _getComicsMaxOffset;\r\n\t\tconst result = await get('comics', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedComic);\r\n\t}\r\n\r\n\tasync function getComic(comicId) {\r\n\t\tconst result = await get(`comics/${comicId}`);\r\n\t\treturn _getProcessedComic(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedComic(comicObj) {\r\n\t\tconst { id, title, pageCount } = comicObj;\r\n\t\tlet thumbnail = _getThumbnailObj(comicObj.thumbnail),\r\n\t\t\tprice = comicObj.prices[0].price,\r\n\t\t\tdescription = !comicObj.description ? 'Description not found' : comicObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description),\r\n\t\t\tlanguage= comicObj.textObjects.language || 'en-us';\r\n\t\treturn {\r\n\t\t\tid, title, pageCount, price, description, thumbnail, shortedDescription, language,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading, \r\n\t\terror, \r\n\t\tprocessState,\r\n\t\tsetProcessState,\r\n\t\tgetCharacter, \r\n\t\tgetCharacters, \r\n\t\tgetCharactersByNamePart, \r\n\t\tgetComic, \r\n\t\tgetComics\r\n\t};\r\n}\r\n\r\nconst _getCharactersMaxLimit = 100;\r\nexport const _getCharactersBaseOffset = 210;\r\nexport const _getCharactersMaxOffset = 1561;\r\n\r\nconst _getComicsMaxLimit = 100;\r\nexport const _getComicsBaseOffset = 0;\r\nexport const _getComicsMaxOffset = 1561;\r\n\r\nconst _maxShortedDescriptionLength = 190;\r\nfunction _getShortedDescription(description) {\r\n\tif (description.length <= _maxShortedDescriptionLength) {\r\n\t\treturn description;\r\n\t}\r\n\r\n\tlet words = description.split(' '), charLen = 0, i = 0;\r\n\twords.forEach((word, index) => {\r\n\t\tif (\r\n\t\t\tcharLen + word.length <= _maxShortedDescriptionLength &&\r\n\t\t\tindex - i <= 1\r\n\t\t) {\r\n\t\t\tcharLen += word.length;\r\n\t\t\ti = index;\r\n\t\t}\r\n\t})\r\n\treturn words.slice(0, i).join(' ') + '…';\r\n}\r\n\r\nconst _imgNotAvailableUrlParts = ['4c002e0305708', 'image_not_available']\r\nfunction _getThumbnailObj(thumbnail) {\r\n\tlet thumbnailObj = {\r\n\t\turl: thumbnail.path + '.' + thumbnail.extension,\r\n\t\tstyle: {}\r\n\t}\r\n\tif (_imgNotAvailableUrlParts.some(\r\n\t\turlPart => thumbnail.path.indexOf(urlPart) > -1\r\n\t)) {\r\n\t\tthumbnailObj.style.objectFit = 'contain';\r\n\t}\r\n\treturn thumbnailObj;\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [processState, setProcessState] = useState('waiting');\r\n\r\n\tconst request = useCallback(async function(url, method='GET', body=null, \r\n\t\t\t\t\theaders={'Content-Type': 'application/json'}) {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('loading');\r\n\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\tif (!response.ok) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true);\r\n\t\t\tsetProcessState('error');\r\n\t\t\tthrow new Error(`Can't fetch url ${url}, error ${response.status}: ${response.statusText}`);\r\n\t\t}\r\n\t\tconst responseBody = await response.json();\r\n\t\tsetLoading(false);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('fetched');\r\n\t\treturn responseBody;\r\n\t}, []);\r\n\r\n\treturn {loading, error, processState, setProcessState, request};\r\n}"],"names":["AppBanner","props","className","src","avengersImg","alt","avengersLogo","ErrorMessage","errorGif","SingleItemWithFiniteState","withFiniteState","SingleComic","itemId","dataType","useMarvelService","processState","setProcessState","getComic","typeParams","char","getData","getCharacter","DataBlock","CharBlock","comic","ComicBlock","useState","data","setData","useEffect","then","BlockComponent","state","BaseSingleItemBlock","thumbnail","title","description","children","backPath","Helmet","name","content","url","style","to","pageCount","language","price","SingleItemPage","parapms","useParams","type","useLocation","pathname","match","id","modifiedActions","stateActions","waiting","loading","error","fetched","success","_apiBase","_apiKey","setLoading","setError","request","useCallback","method","body","headers","fetch","response","ok","Error","status","statusText","json","responseBody","useHttp","get","urlPrefix","getParametersObject","key","getParametersList","push","requestUrl","join","offsetDelta","limit","_getCharactersMaxLimit","offset","_getCharactersBaseOffset","_getCharactersMaxOffset","result","results","map","_getProcessedCharacter","nameStartsWith","charObj","urls","comics","_getThumbnailObj","homepageUrl","wikiUrl","shortedDescription","_getShortedDescription","items","_getComicsMaxLimit","_getComicsBaseOffset","_getComicsMaxOffset","_getProcessedComic","comicId","comicObj","prices","textObjects","getCharacters","getCharactersByNamePart","getComics","length","words","split","charLen","i","forEach","word","index","slice","_imgNotAvailableUrlParts","thumbnailObj","path","extension","some","urlPart","indexOf","objectFit"],"sourceRoot":""}