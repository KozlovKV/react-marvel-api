{"version":3,"file":"static/js/972.f0a8aea9.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charFindForm/CharFindForm.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","hocs/withFiniteState.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import errorGif from './error.gif';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn <img src={errorGif} alt=\"Error gif\" />\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from './../../services/MarvelService';\r\n\r\nimport withFiniteState from './../../hocs/withFiniteState';\r\n\r\nimport './randomChar.scss';\r\n\r\nimport mjolnirImg from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomCharBlockWithFiniteState = withFiniteState();\r\n\r\nexport default function RandomChar() {\r\n\r\n\tconst [char, setChar] = useState({}),\r\n\t\t{ processState, setProcessState, getCharacter } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateChar = () => {\r\n\t\tlet randomId = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\t\tgetCharacter(randomId)\r\n\t\t\t.then(onCharLoaded)\r\n\t\t\t.then(() => setProcessState('success'));\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(updateChar, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar\">\r\n\t\t\t<RandomCharBlockWithFiniteState state={processState}>\r\n\t\t\t\t<RandomCharBlock char={char} />\r\n\t\t\t</RandomCharBlockWithFiniteState>\r\n\t\t\t<div className=\"randomchar__static\">\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tRandom character for today!<br />\r\n\t\t\t\t\tDo you want to get to know him better?\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"randomchar__title\">\r\n\t\t\t\t\tOr choose another one\r\n\t\t\t\t</p>\r\n\t\t\t\t<button className=\"button button__main\" onClick={updateChar}>\r\n\t\t\t\t\t<div className=\"inner\">try it</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img src={mjolnirImg} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction RandomCharBlock({ char }) {\r\n\tconst { thumbnail, name, homepageUrl, wikiUrl, shortedDescription } = char;\r\n\r\n\treturn (\r\n\t\t<div className=\"randomchar__block\">\r\n\t\t\t<img src={thumbnail.url} alt={name} className=\"randomchar__img\" style={thumbnail.style} />\r\n\t\t\t<div className=\"randomchar__info\">\r\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\r\n\t\t\t\t<p className=\"randomchar__descr\">\r\n\t\t\t\t\t{shortedDescription}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className=\"randomchar__btns\">\r\n\t\t\t\t\t<a href={homepageUrl} className=\"button button__main\">\r\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href={wikiUrl} className=\"button button__secondary\">\r\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService, { _getCharactersMaxOffset, _getCharactersBaseOffset } from \"../../services/MarvelService\";\r\n\r\nimport withFiniteState from './../../hocs/withFiniteState';\r\n\r\nimport './charList.scss';\r\n\r\nconst CharItemsWithFiniteState = withFiniteState();\r\n\r\nexport default function CharList(props) {\r\n\tconst _loadMoreDelta = 9;\r\n\r\n\tconst [characters, setCharacters] = useState([]),\r\n\t\t{ processState, setProcessState, getCharacters } = useMarvelService();\r\n\r\n\tconst onCharactersLoaded = (newCharacters) => {\r\n\t\tsetCharacters(characters => [...characters, ...newCharacters]);\r\n\t}\r\n\r\n\tconst loadCharacters = () => {\r\n\t\tconst offset = characters.length;\r\n\t\tgetCharacters(offset, _loadMoreDelta)\r\n\t\t\t.then(onCharactersLoaded)\r\n\t\t\t.then(() => setProcessState('success'));\r\n\t}\r\n\r\n\tconst getCharItems = () => {\r\n\t\treturn characters.map((char, i) => {\r\n\t\t\tconst { thumbnail, name, id } = char, { selectedCharId, onCharSelected } = props;\r\n\t\t\tconst classes = `char__item ${selectedCharId === id ? 'char__item_selected' : ''}`;\r\n\t\t\treturn (\r\n\t\t\t\t<li className={classes} tabIndex=\"0\" role=\"treeitem\"\r\n\t\t\t\t\tonFocus={() => onCharSelected(id)} key={i} data-id={id}>\r\n\t\t\t\t\t<img src={thumbnail.url} alt={name} style={thumbnail.style} />\r\n\t\t\t\t\t<div className=\"char__name\">{name}</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tconst canLoadMore = () => characters.length < _getCharactersMaxOffset - _getCharactersBaseOffset;\r\n\tconst getLoadMoreButton = () => {\r\n\t\tconst canLoadMoreAnswer = canLoadMore();\r\n\t\treturn <button className=\"button button__main button__long\"\r\n\t\t\tonClick={onLoadMore} disabled={!canLoadMoreAnswer || processState === 'loading'}\r\n\t\t\ttabIndex=\"0\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t{canLoadMoreAnswer ? \"load more\" : \"All characters loaded\"}\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t}\r\n\r\n\tconst onLoadMore = () => {\r\n\t\tif (canLoadMore()) {\r\n\t\t\tloadCharacters();\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(loadCharacters, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"char__list\">\r\n\t\t\t<CharItemsWithFiniteState state={processState}>\r\n\t\t\t\t<ul className=\"char__grid\">\r\n\t\t\t\t\t{getCharItems()}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{getLoadMoreButton()}\r\n\t\t\t</CharItemsWithFiniteState>\r\n\t\t</div>\r\n\t);\r\n}","import './skeleton.scss';\r\n\r\nexport default function Skeleton() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p className=\"char__select\">Please select a character to see information</p>\r\n\t\t\t<div className=\"skeleton\">\r\n\t\t\t\t<div className=\"pulse skeleton__header\">\r\n\t\t\t\t\t<div className=\"pulse skeleton__circle\"></div>\r\n\t\t\t\t\t<div className=\"pulse skeleton__mini\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t\t<div className=\"pulse skeleton__block\"></div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport withFiniteState from './../../hocs/withFiniteState';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfoContentWithFiniteStateMachine = withFiniteState({\r\n\twaiting: () => <Skeleton />\r\n});\r\n\r\nexport default function CharInfo(props) {\r\n\r\n\tconst [char, setChar] = useState(null),\r\n\t\t{ processState, setProcessState, getCharacter } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\r\n\tconst updateCharInfo = () => {\r\n\t\tconst { selectedCharId } = props;\r\n\t\tif (selectedCharId) {\r\n\t\t\tgetCharacter(selectedCharId)\r\n\t\t\t\t.then(onCharLoaded)\r\n\t\t\t\t.then(() => setProcessState('success'));\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(updateCharInfo, [props.selectedCharId]);\r\n\r\n\treturn (\r\n\t\t<div className=\"char__info\">\r\n\t\t\t<CharInfoContentWithFiniteStateMachine state={processState}>\r\n\t\t\t\t<CharInfoBlock char={char} />\r\n\t\t\t</CharInfoContentWithFiniteStateMachine>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst CharInfoBlock = ({ char }) => {\r\n\tconst { thumbnail, name, homepageUrl, wikiUrl, description, comics } = char;\r\n\tlet comicsElements = comics.map(\r\n\t\tcomic =>\r\n\t\t\t<li className=\"char__comics-item\" key={comic.name}>\r\n\t\t\t\t{comic.name}\r\n\t\t\t</li>\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"char__basics\">\r\n\t\t\t\t<img src={thumbnail.url} alt={name} style={thumbnail.style} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\r\n\t\t\t\t\t<div className=\"char__btns\">\r\n\t\t\t\t\t\t<a href={homepageUrl} className=\"button button__main\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a href={wikiUrl} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"char__comics\">Comics:</div>\r\n\t\t\t<ul className=\"char__comics-list\">\r\n\t\t\t\t{comicsElements.length > 0 ? comicsElements.slice(0, 10) : 'No comics with this character'}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t)\r\n}","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport withFiniteState from '../../hocs/withFiniteState';\r\n\r\nimport './charFindForm.scss';\r\n\r\nconst FormResultsWithFiniteState = withFiniteState();\r\n\r\nexport default function CharFindForm(props) {\r\n\tconst { processState, setProcessState, getCharactersByNamePart } = useMarvelService();\r\n\tconst [chars, setChars] = useState(null);\r\n\r\n\tfunction getCharsResultList() {\r\n\t\tif (!chars) return null;\r\n\t\tif (!chars.length) {\r\n\t\t\treturn <h3 className=\"error\">\r\n\t\t\t\tCharacters not found\r\n\t\t\t</h3>;\r\n\t\t}\r\n\t\treturn <>\r\n\t\t\t<h3 className=\"success\">\r\n\t\t\t\tFounded {chars.length} char{chars.length > 1 ? 's' : ''}\r\n\t\t\t</h3>\r\n\t\t\t<ul className=\"char__find__results-list\">\r\n\t\t\t\t{chars.map(char =>\r\n\t\t\t\t\t<li key={char.id} className=\"row char__find__results-item\">\r\n\t\t\t\t\t\t<h4>{char.name}</h4>\r\n\t\t\t\t\t\t<Link to={`/chars/${char.id}`} className=\"button button__secondary\">\r\n\t\t\t\t\t\t\t<div className=\"inner\">char page</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t}\r\n\r\n\treturn <div className=\"char__find\">\r\n\t\t<h3>Or find a characters by name:</h3>\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ name: '' }}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tname: Yup.string().required('Name is required').min(2, '2 symbols minimum')\r\n\t\t\t})}\r\n\t\t\tonSubmit={({ name }) => {\r\n\t\t\t\tgetCharactersByNamePart(name)\r\n\t\t\t\t\t.then(setChars)\r\n\t\t\t\t\t.then(() => setProcessState('success'));\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Form className=\"char__find__form row\">\r\n\t\t\t\t<Field name=\"name\" placeholder=\"Enter name\" />\r\n\t\t\t\t<button type=\"submit\" className=\"button button__main\">\r\n\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t<ErrorMessage name=\"name\" className=\"error\" component=\"h3\" />\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t\t<FormResultsWithFiniteState state={processState}>\r\n\t\t\t{getCharsResultList()}\r\n\t\t</FormResultsWithFiniteState>\r\n\t</div>\r\n}","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({ error: true });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error } = this.state, { children } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{error ? <ErrorMessage /> : children}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}","import { useState } from 'react';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport CharFindForm from '../charFindForm/CharFindForm';\r\n\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport bgDecoration from '../../resources/img/vision.png';\r\n\r\nexport default function MainPage() {\r\n\tconst [selectedCharId, setSelectedCharId] = useState(0);\r\n\r\n\tconst onCharSelected = (selectedCharId) => setSelectedCharId(selectedCharId);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name=\"description\" content=\"Marvel information portal powered by Marvel API\" />\r\n\t\t\t\t<title>Marvel Universe</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList selectedCharId={selectedCharId} onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo selectedCharId={selectedCharId} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharFindForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={bgDecoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n}","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nexport default function withFiniteState(modifiedActions) {\r\n\tconst stateActions = {\r\n\t\twaiting: () => {},\r\n\t\tloading: () => <Spinner />,\r\n\t\terror: () => <ErrorMessage />,\r\n\t\tfetched: () => {},\r\n\t\tsuccess: ({children}) => <>{children}</>,\r\n\t\t...modifiedActions\r\n\t}\r\n\treturn ({state, ...props}) => {\r\n\t\treturn stateActions[state](props);\r\n\t}\r\n}","import useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelService() {\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n\tconst _apiKey = 'apikey=d840bc106aeea955689856e89bb25220';\r\n\tconst {loading, error, processState, setProcessState, request} = useHttp();\r\n\r\n\tasync function get(urlPrefix, getParametersObject) {\r\n\t\tlet getParametersList = [_apiKey];\r\n\t\tfor (let key in getParametersObject) {\r\n\t\t\tgetParametersList.push(`${key}=${getParametersObject[key]}`);\r\n\t\t}\r\n\t\tlet requestUrl = `${_apiBase}/${urlPrefix}?${getParametersList.join('&')}`;\r\n\t\treturn request(requestUrl);\r\n\t}\r\n\r\n\tasync function getCharacters(offsetDelta, limit = 9) {\r\n\t\tlimit = limit <= _getCharactersMaxLimit ? limit : _getCharactersMaxLimit;\r\n\t\tlet offset = _getCharactersBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getCharactersMaxOffset ? offset : _getCharactersMaxOffset;\r\n\t\tconst result = await get('characters', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharactersByNamePart(name) {\r\n\t\tconst result = await get('characters', { nameStartsWith: name, limit: 100 })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharacter(id) {\r\n\t\tconst result = await get(`characters/${id}`)\r\n\t\treturn _getProcessedCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedCharacter(charObj) {\r\n\t\tconst { id, name, urls, comics } = charObj;\r\n\t\tlet thumbnail = _getThumbnailObj(charObj.thumbnail),\r\n\t\t\thomepageUrl = urls[0].url,\r\n\t\t\twikiUrl = urls[1].url,\r\n\t\t\tdescription = !charObj.description ? 'Description not found' : charObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description);\r\n\t\treturn {\r\n\t\t\tid, name, description, thumbnail, homepageUrl, wikiUrl, shortedDescription, comics: comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getComics(offsetDelta, limit = 8) {\r\n\t\tlimit = limit <= _getComicsMaxLimit ? limit : _getComicsMaxLimit;\r\n\t\tlet offset = _getComicsBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getComicsMaxOffset ? offset : _getComicsMaxOffset;\r\n\t\tconst result = await get('comics', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedComic);\r\n\t}\r\n\r\n\tasync function getComic(comicId) {\r\n\t\tconst result = await get(`comics/${comicId}`);\r\n\t\treturn _getProcessedComic(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedComic(comicObj) {\r\n\t\tconst { id, title, pageCount } = comicObj;\r\n\t\tlet thumbnail = _getThumbnailObj(comicObj.thumbnail),\r\n\t\t\tprice = comicObj.prices[0].price,\r\n\t\t\tdescription = !comicObj.description ? 'Description not found' : comicObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description),\r\n\t\t\tlanguage= comicObj.textObjects.language || 'en-us';\r\n\t\treturn {\r\n\t\t\tid, title, pageCount, price, description, thumbnail, shortedDescription, language,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading, \r\n\t\terror, \r\n\t\tprocessState,\r\n\t\tsetProcessState,\r\n\t\tgetCharacter, \r\n\t\tgetCharacters, \r\n\t\tgetCharactersByNamePart, \r\n\t\tgetComic, \r\n\t\tgetComics\r\n\t};\r\n}\r\n\r\nconst _getCharactersMaxLimit = 100;\r\nexport const _getCharactersBaseOffset = 210;\r\nexport const _getCharactersMaxOffset = 1561;\r\n\r\nconst _getComicsMaxLimit = 100;\r\nexport const _getComicsBaseOffset = 0;\r\nexport const _getComicsMaxOffset = 1561;\r\n\r\nconst _maxShortedDescriptionLength = 190;\r\nfunction _getShortedDescription(description) {\r\n\tif (description.length <= _maxShortedDescriptionLength) {\r\n\t\treturn description;\r\n\t}\r\n\r\n\tlet words = description.split(' '), charLen = 0, i = 0;\r\n\twords.forEach((word, index) => {\r\n\t\tif (\r\n\t\t\tcharLen + word.length <= _maxShortedDescriptionLength &&\r\n\t\t\tindex - i <= 1\r\n\t\t) {\r\n\t\t\tcharLen += word.length;\r\n\t\t\ti = index;\r\n\t\t}\r\n\t})\r\n\treturn words.slice(0, i).join(' ') + '…';\r\n}\r\n\r\nconst _imgNotAvailableUrlParts = ['4c002e0305708', 'image_not_available']\r\nfunction _getThumbnailObj(thumbnail) {\r\n\tlet thumbnailObj = {\r\n\t\turl: thumbnail.path + '.' + thumbnail.extension,\r\n\t\tstyle: {}\r\n\t}\r\n\tif (_imgNotAvailableUrlParts.some(\r\n\t\turlPart => thumbnail.path.indexOf(urlPart) > -1\r\n\t)) {\r\n\t\tthumbnailObj.style.objectFit = 'contain';\r\n\t}\r\n\treturn thumbnailObj;\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [processState, setProcessState] = useState('waiting');\r\n\r\n\tconst request = useCallback(async function(url, method='GET', body=null, \r\n\t\t\t\t\theaders={'Content-Type': 'application/json'}) {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('loading');\r\n\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\tif (!response.ok) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true);\r\n\t\t\tsetProcessState('error');\r\n\t\t\tthrow new Error(`Can't fetch url ${url}, error ${response.status}: ${response.statusText}`);\r\n\t\t}\r\n\t\tconst responseBody = await response.json();\r\n\t\tsetLoading(false);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('fetched');\r\n\t\treturn responseBody;\r\n\t}, []);\r\n\r\n\treturn {loading, error, processState, setProcessState, request};\r\n}"],"names":["ErrorMessage","src","errorGif","alt","RandomCharBlockWithFiniteState","withFiniteState","RandomChar","useState","char","setChar","useMarvelService","processState","setProcessState","getCharacter","onCharLoaded","updateChar","randomId","Math","floor","random","then","useEffect","className","state","RandomCharBlock","onClick","mjolnirImg","thumbnail","name","homepageUrl","wikiUrl","shortedDescription","url","style","href","CharItemsWithFiniteState","CharList","props","characters","setCharacters","getCharacters","onCharactersLoaded","newCharacters","loadCharacters","offset","length","canLoadMore","_getCharactersMaxOffset","_getCharactersBaseOffset","onLoadMore","map","i","id","selectedCharId","onCharSelected","classes","tabIndex","role","onFocus","canLoadMoreAnswer","disabled","getLoadMoreButton","Skeleton","CharInfoContentWithFiniteStateMachine","waiting","CharInfo","CharInfoBlock","description","comicsElements","comics","comic","slice","FormResultsWithFiniteState","CharFindForm","getCharactersByNamePart","chars","setChars","initialValues","validationSchema","Yup","required","min","onSubmit","placeholder","type","component","to","ErrorBoundary","error","errorInfo","console","log","this","setState","children","Component","MainPage","setSelectedCharId","Helmet","content","bgDecoration","modifiedActions","stateActions","loading","fetched","success","_apiBase","_apiKey","setLoading","setError","request","useCallback","method","body","headers","fetch","response","ok","Error","status","statusText","json","responseBody","useHttp","get","urlPrefix","getParametersObject","key","getParametersList","push","requestUrl","join","offsetDelta","limit","_getCharactersMaxLimit","result","data","results","_getProcessedCharacter","nameStartsWith","charObj","urls","_getThumbnailObj","_getShortedDescription","items","_getComicsMaxLimit","_getComicsBaseOffset","_getComicsMaxOffset","_getProcessedComic","comicId","comicObj","title","pageCount","price","prices","language","textObjects","getComic","getComics","words","split","charLen","forEach","word","index","_imgNotAvailableUrlParts","thumbnailObj","path","extension","some","urlPart","indexOf","objectFit"],"sourceRoot":""}