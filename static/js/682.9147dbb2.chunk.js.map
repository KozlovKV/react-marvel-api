{"version":3,"file":"static/js/682.9147dbb2.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hocs/withFiniteState.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './appBanner.scss';\r\n\r\nimport avengersImg from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nexport default function AppBanner(props) {\r\n\treturn (\r\n\t\t<div className=\"app__banner\">\r\n\t\t\t<img src={avengersImg} alt=\"Avengers\" />\r\n\t\t\t<div className=\"app__banner-text\">\r\n\t\t\t\tNew comics every week!<br />\r\n\t\t\t\tStay tuned!\r\n\t\t\t</div>\r\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\r\n\t\t</div>\r\n\t);\r\n}","import errorGif from './error.gif';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn <img src={errorGif} alt=\"Error gif\" />\r\n}","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService, { _getComicsMaxOffset, _getComicsBaseOffset } from \"../../services/MarvelService\";\r\n\r\nimport withFiniteState from \"../../hocs/withFiniteState\";\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsItemsWithFiniteState = withFiniteState();\r\n\r\nexport default function ComicsList(props) {\r\n\tconst _loadMoreDelta = 8;\r\n\r\n\tconst [comics, setComics] = useState([]),\r\n\t\t{ processState, setProcessState, getComics } = useMarvelService();\r\n\r\n\tconst onComicsLoaded = (newComics) => {\r\n\t\tsetComics(comics => [...comics, ...newComics]);\r\n\t}\r\n\r\n\tconst loadComics = () => {\r\n\t\tconst offset = comics.length;\r\n\t\tgetComics(offset, _loadMoreDelta)\r\n\t\t\t.then(onComicsLoaded)\r\n\t\t\t.then(() => setProcessState('success'));\r\n\t}\r\n\r\n\tconst getComicsItems = () => {\r\n\t\treturn comics.map((comic, i) => {\r\n\t\t\tconst { id, thumbnail, title, price } = comic;\r\n\t\t\treturn (\r\n\t\t\t\t<li className=\"comics__item\" key={id}>\r\n\t\t\t\t\t<Link to={`/comics/${id}`}>\r\n\t\t\t\t\t\t<img src={thumbnail.url} alt={title} className=\"comics__item-img\" style={thumbnail.style} />\r\n\t\t\t\t\t\t<div className=\"comics__item-name\">{title}</div>\r\n\t\t\t\t\t\t<div className=\"comics__item-price\">{price}$</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\tconst canLoadMore = () => comics.length < _getComicsMaxOffset - _getComicsBaseOffset;\r\n\tconst getLoadMoreButton = () => {\r\n\t\tconst canLoadMoreAnswer = canLoadMore();\r\n\t\treturn <button className=\"button button__main button__long\"\r\n\t\t\tonClick={onLoadMore} disabled={!canLoadMoreAnswer}\r\n\t\t\ttabIndex=\"0\">\r\n\t\t\t<div className=\"inner\">\r\n\t\t\t\t{canLoadMoreAnswer ? \"load more\" : \"All comics loaded\"}\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t}\r\n\r\n\tconst onLoadMore = () => {\r\n\t\tif (canLoadMore()) {\r\n\t\t\tloadComics();\r\n\t\t}\r\n\t}\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tuseEffect(loadComics, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"comics__list\">\r\n\t\t\t<ComicsItemsWithFiniteState state={processState}>\r\n\t\t\t\t<ul className=\"comics__grid\">\r\n\t\t\t\t\t{getComicsItems()}\r\n\t\t\t\t</ul>\r\n\t\t\t</ComicsItemsWithFiniteState>\r\n\t\t\t{getLoadMoreButton()}\r\n\t\t</div>\r\n\t);\r\n}","import Helmet from 'react-helmet';\r\n\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nexport default function ComicsPage() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name=\"description\" content=\"All Marvel's comics\" />\r\n\t\t\t\t<title>Comics list</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t);\r\n}","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\n\r\nexport default function withFiniteState(modifiedActions) {\r\n\tconst stateActions = {\r\n\t\twaiting: () => {},\r\n\t\tloading: () => <Spinner />,\r\n\t\terror: () => <ErrorMessage />,\r\n\t\tfetched: () => {},\r\n\t\tsuccess: ({children}) => <>{children}</>,\r\n\t\t...modifiedActions\r\n\t}\r\n\treturn ({state, ...props}) => {\r\n\t\treturn stateActions[state](props);\r\n\t}\r\n}","import useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelService() {\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n\tconst _apiKey = 'apikey=d840bc106aeea955689856e89bb25220';\r\n\tconst {loading, error, processState, setProcessState, request} = useHttp();\r\n\r\n\tasync function get(urlPrefix, getParametersObject) {\r\n\t\tlet getParametersList = [_apiKey];\r\n\t\tfor (let key in getParametersObject) {\r\n\t\t\tgetParametersList.push(`${key}=${getParametersObject[key]}`);\r\n\t\t}\r\n\t\tlet requestUrl = `${_apiBase}/${urlPrefix}?${getParametersList.join('&')}`;\r\n\t\treturn request(requestUrl);\r\n\t}\r\n\r\n\tasync function getCharacters(offsetDelta, limit = 9) {\r\n\t\tlimit = limit <= _getCharactersMaxLimit ? limit : _getCharactersMaxLimit;\r\n\t\tlet offset = _getCharactersBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getCharactersMaxOffset ? offset : _getCharactersMaxOffset;\r\n\t\tconst result = await get('characters', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharactersByNamePart(name) {\r\n\t\tconst result = await get('characters', { nameStartsWith: name, limit: 100 })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharacter(id) {\r\n\t\tconst result = await get(`characters/${id}`)\r\n\t\treturn _getProcessedCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedCharacter(charObj) {\r\n\t\tconst { id, name, urls, comics } = charObj;\r\n\t\tlet thumbnail = _getThumbnailObj(charObj.thumbnail),\r\n\t\t\thomepageUrl = urls[0].url,\r\n\t\t\twikiUrl = urls[1].url,\r\n\t\t\tdescription = !charObj.description ? 'Description not found' : charObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description);\r\n\t\treturn {\r\n\t\t\tid, name, description, thumbnail, homepageUrl, wikiUrl, shortedDescription, comics: comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getComics(offsetDelta, limit = 8) {\r\n\t\tlimit = limit <= _getComicsMaxLimit ? limit : _getComicsMaxLimit;\r\n\t\tlet offset = _getComicsBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getComicsMaxOffset ? offset : _getComicsMaxOffset;\r\n\t\tconst result = await get('comics', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedComic);\r\n\t}\r\n\r\n\tasync function getComic(comicId) {\r\n\t\tconst result = await get(`comics/${comicId}`);\r\n\t\treturn _getProcessedComic(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedComic(comicObj) {\r\n\t\tconst { id, title, pageCount } = comicObj;\r\n\t\tlet thumbnail = _getThumbnailObj(comicObj.thumbnail),\r\n\t\t\tprice = comicObj.prices[0].price,\r\n\t\t\tdescription = !comicObj.description ? 'Description not found' : comicObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description),\r\n\t\t\tlanguage= comicObj.textObjects.language || 'en-us';\r\n\t\treturn {\r\n\t\t\tid, title, pageCount, price, description, thumbnail, shortedDescription, language,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading, \r\n\t\terror, \r\n\t\tprocessState,\r\n\t\tsetProcessState,\r\n\t\tgetCharacter, \r\n\t\tgetCharacters, \r\n\t\tgetCharactersByNamePart, \r\n\t\tgetComic, \r\n\t\tgetComics\r\n\t};\r\n}\r\n\r\nconst _getCharactersMaxLimit = 100;\r\nexport const _getCharactersBaseOffset = 210;\r\nexport const _getCharactersMaxOffset = 1561;\r\n\r\nconst _getComicsMaxLimit = 100;\r\nexport const _getComicsBaseOffset = 0;\r\nexport const _getComicsMaxOffset = 1561;\r\n\r\nconst _maxShortedDescriptionLength = 190;\r\nfunction _getShortedDescription(description) {\r\n\tif (description.length <= _maxShortedDescriptionLength) {\r\n\t\treturn description;\r\n\t}\r\n\r\n\tlet words = description.split(' '), charLen = 0, i = 0;\r\n\twords.forEach((word, index) => {\r\n\t\tif (\r\n\t\t\tcharLen + word.length <= _maxShortedDescriptionLength &&\r\n\t\t\tindex - i <= 1\r\n\t\t) {\r\n\t\t\tcharLen += word.length;\r\n\t\t\ti = index;\r\n\t\t}\r\n\t})\r\n\treturn words.slice(0, i).join(' ') + '…';\r\n}\r\n\r\nconst _imgNotAvailableUrlParts = ['4c002e0305708', 'image_not_available']\r\nfunction _getThumbnailObj(thumbnail) {\r\n\tlet thumbnailObj = {\r\n\t\turl: thumbnail.path + '.' + thumbnail.extension,\r\n\t\tstyle: {}\r\n\t}\r\n\tif (_imgNotAvailableUrlParts.some(\r\n\t\turlPart => thumbnail.path.indexOf(urlPart) > -1\r\n\t)) {\r\n\t\tthumbnailObj.style.objectFit = 'contain';\r\n\t}\r\n\treturn thumbnailObj;\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [processState, setProcessState] = useState('waiting');\r\n\r\n\tconst request = useCallback(async function(url, method='GET', body=null, \r\n\t\t\t\t\theaders={'Content-Type': 'application/json'}) {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('loading');\r\n\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\tif (!response.ok) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true);\r\n\t\t\tsetProcessState('error');\r\n\t\t\tthrow new Error(`Can't fetch url ${url}, error ${response.status}: ${response.statusText}`);\r\n\t\t}\r\n\t\tconst responseBody = await response.json();\r\n\t\tsetLoading(false);\r\n\t\tsetError(false);\r\n\t\tsetProcessState('fetched');\r\n\t\treturn responseBody;\r\n\t}, []);\r\n\r\n\treturn {loading, error, processState, setProcessState, request};\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["AppBanner","props","className","src","avengersImg","alt","avengersLogo","ErrorMessage","errorGif","ComicsItemsWithFiniteState","withFiniteState","ComicsList","useState","comics","setComics","useMarvelService","processState","setProcessState","getComics","onComicsLoaded","newComics","loadComics","offset","length","then","canLoadMore","_getComicsMaxOffset","_getComicsBaseOffset","onLoadMore","useEffect","state","map","comic","i","id","thumbnail","title","price","to","url","style","canLoadMoreAnswer","onClick","disabled","tabIndex","getLoadMoreButton","ComicsPage","Helmet","name","content","modifiedActions","stateActions","waiting","loading","error","fetched","success","children","_apiBase","_apiKey","setLoading","setError","request","useCallback","method","body","headers","fetch","response","ok","Error","status","statusText","json","responseBody","useHttp","get","urlPrefix","getParametersObject","key","getParametersList","push","requestUrl","join","offsetDelta","limit","_getCharactersMaxLimit","_getCharactersBaseOffset","_getCharactersMaxOffset","result","data","results","_getProcessedCharacter","nameStartsWith","charObj","urls","_getThumbnailObj","homepageUrl","wikiUrl","description","shortedDescription","_getShortedDescription","items","_getComicsMaxLimit","_getProcessedComic","comicId","comicObj","pageCount","prices","language","textObjects","getCharacter","getCharacters","getCharactersByNamePart","getComic","words","split","charLen","forEach","word","index","slice","_imgNotAvailableUrlParts","thumbnailObj","path","extension","some","urlPart","indexOf","objectFit","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}