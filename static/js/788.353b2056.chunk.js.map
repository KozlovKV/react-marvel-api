{"version":3,"file":"static/js/788.353b2056.chunk.js","mappings":"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","sources":["components/animatedAppearance/AnimatedAppearance.js","components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/singleItem/SingleItem.js","components/pages/SingleItemPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import { CSSTransition } from \"react-transition-group\";\r\n\r\nimport './animatedAppearance.scss';\r\n\r\nexport default function AnimatedAppearance(props) {\r\n\treturn <CSSTransition\r\n\t\t{...props} timeout={300}\r\n\t\tclassNames=\"appearance\">\r\n\t\t<>\r\n\t\t\t{props.children}\r\n\t\t</>\r\n\t</CSSTransition>\r\n}","import './appBanner.scss';\r\n\r\nimport avengersImg from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nexport default function AppBanner(props) {\r\n\treturn (\r\n\t\t<div className=\"app__banner\">\r\n\t\t\t<img src={avengersImg} alt=\"Avengers\" />\r\n\t\t\t<div className=\"app__banner-text\">\r\n\t\t\t\tNew comics every week!<br />\r\n\t\t\t\tStay tuned!\r\n\t\t\t</div>\r\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\r\n\t\t</div>\r\n\t);\r\n}","import errorGif from './error.gif';\r\n\r\nexport default function ErrorMessage() {\r\n\treturn <img src={errorGif} alt=\"Error gif\" />\r\n}","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AnimatedAppearance from '../animatedAppearance/AnimatedAppearance';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './singleItem.scss';\r\n\r\nexport default function SingleComic(props) {\r\n\tconst { itemId, type } = props;\r\n\tconst { loading, error, getComic, getCharacter } = useMarvelService();\r\n\tconst typeParams = {\r\n\t\tchar: {\r\n\t\t\tgetData: getCharacter,\r\n\t\t\tgetBlock: getCharBlock,\r\n\t\t},\r\n\t\tcomic: {\r\n\t\t\tgetData: getComic,\r\n\t\t\tgetBlock: getComicBlock,\r\n\t\t}\r\n\t}\r\n\tconst [data, setData] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\ttypeParams[type].getData(itemId).then(setData);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [itemId]);\r\n\r\n\tconst spinner = loading ? <Spinner /> : null;\r\n\tconst errorMessage = error ? <ErrorMessage /> : null;\r\n\tconst dataBlock = !(loading || error) && data ? typeParams[type].getBlock(data) : null;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{spinner}\r\n\t\t\t<AnimatedAppearance in={!loading}>\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t{dataBlock}\r\n\t\t\t</AnimatedAppearance>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction getComicBlock({ thumbnail, title, pageCount, description, language, price }) {\r\n\treturn <div className=\"single-item\">\r\n\t\t<img src={thumbnail.url} alt={title}\r\n\t\t\tclassName=\"single-item__img\" style={thumbnail.style} />\r\n\t\t<div className=\"single-item__info\">\r\n\t\t\t<h2 className=\"single-item__name\">{title}</h2>\r\n\t\t\t<p className=\"single-item__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</p>\r\n\t\t\t<p className=\"single-item__descr\">{pageCount} pages</p>\r\n\t\t\t<p className=\"single-item__descr\">Language: {language}</p>\r\n\t\t\t<div className=\"single-item__price\">{price}$</div>\r\n\t\t</div>\r\n\t\t<Link to=\"/comics\" className=\"single-item__back\">Back to all</Link>\r\n\t</div>;\r\n}\r\n\r\nfunction getCharBlock({ thumbnail, title, description, }) {\r\n\treturn <div className=\"single-item\">\r\n\t\t<img src={thumbnail.url} alt={title}\r\n\t\t\tclassName=\"single-item__img\" style={thumbnail.style} />\r\n\t\t<div className=\"single-item__info\">\r\n\t\t\t<h2 className=\"single-item__name\">{title}</h2>\r\n\t\t\t<p className=\"single-item__descr\">\r\n\t\t\t\t{description}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<Link to=\"/chars\" className=\"single-item__back\">Back to all</Link>\r\n\t</div>;\r\n}","import { useParams, useLocation } from \"react-router-dom\";\r\n\r\nimport SingleItem from '../singleItem/SingleItem';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nexport default function SingleItemPage() {\r\n\tconst parapms = useParams();\r\n\tconst type = useLocation().pathname.match('char') ? 'char' : 'comic';\r\n\r\n\treturn ( <>\r\n\t\t<AppBanner />\r\n\t\t<SingleItem itemId={parapms.id} type={type} />\r\n\t</>\r\n\t);\r\n}","import useHttp from \"../hooks/http.hook\";\r\n\r\nexport default function useMarvelService() {\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public';\r\n\tconst _apiKey = 'apikey=d840bc106aeea955689856e89bb25220';\r\n\tconst {loading, error, request} = useHttp();\r\n\r\n\tasync function get(urlPrefix, getParametersObject) {\r\n\t\tlet getParametersList = [_apiKey];\r\n\t\tfor (let key in getParametersObject) {\r\n\t\t\tgetParametersList.push(`${key}=${getParametersObject[key]}`);\r\n\t\t}\r\n\t\tlet requestUrl = `${_apiBase}/${urlPrefix}?${getParametersList.join('&')}`;\r\n\t\treturn request(requestUrl);\r\n\t}\r\n\r\n\tasync function getCharacters(offsetDelta, limit = 9) {\r\n\t\tlimit = limit <= _getCharactersMaxLimit ? limit : _getCharactersMaxLimit;\r\n\t\tlet offset = _getCharactersBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getCharactersMaxOffset ? offset : _getCharactersMaxOffset;\r\n\t\tconst result = await get('characters', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharactersByNamePart(name) {\r\n\t\tconst result = await get('characters', { nameStartsWith: name, limit: 100 })\r\n\t\treturn result.data.results.map(_getProcessedCharacter);\r\n\t}\r\n\r\n\tasync function getCharacter(id) {\r\n\t\tconst result = await get(`characters/${id}`)\r\n\t\treturn _getProcessedCharacter(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedCharacter(charObj) {\r\n\t\tconst { id, name, urls, comics } = charObj;\r\n\t\tlet thumbnail = _getThumbnailObj(charObj.thumbnail),\r\n\t\t\thomepageUrl = urls[0].url,\r\n\t\t\twikiUrl = urls[1].url,\r\n\t\t\tdescription = !charObj.description ? 'Description not found' : charObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description);\r\n\t\treturn {\r\n\t\t\tid, name, description, thumbnail, homepageUrl, wikiUrl, shortedDescription, comics: comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tasync function getComics(offsetDelta, limit = 8) {\r\n\t\tlimit = limit <= _getComicsMaxLimit ? limit : _getComicsMaxLimit;\r\n\t\tlet offset = _getComicsBaseOffset + offsetDelta;\r\n\t\toffset = offset <= _getComicsMaxOffset ? offset : _getComicsMaxOffset;\r\n\t\tconst result = await get('comics', { limit, offset })\r\n\t\treturn result.data.results.map(_getProcessedComic);\r\n\t}\r\n\r\n\tasync function getComic(comicId) {\r\n\t\tconst result = await get(`comics/${comicId}`);\r\n\t\treturn _getProcessedComic(result.data.results[0]);\r\n\t}\r\n\r\n\tfunction _getProcessedComic(comicObj) {\r\n\t\tconst { id, title, pageCount } = comicObj;\r\n\t\tlet thumbnail = _getThumbnailObj(comicObj.thumbnail),\r\n\t\t\tprice = comicObj.prices[0].price,\r\n\t\t\tdescription = !comicObj.description ? 'Description not found' : comicObj.description,\r\n\t\t\tshortedDescription = _getShortedDescription(description),\r\n\t\t\tlanguage= comicObj.textObjects.language || 'en-us';\r\n\t\treturn {\r\n\t\t\tid, title, pageCount, price, description, thumbnail, shortedDescription, language,\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading, \r\n\t\terror, \r\n\t\tgetCharacter, \r\n\t\tgetCharacters, \r\n\t\tgetCharactersByNamePart, \r\n\t\tgetComic, \r\n\t\tgetComics\r\n\t};\r\n}\r\n\r\nconst _getCharactersMaxLimit = 100;\r\nexport const _getCharactersBaseOffset = 210;\r\nexport const _getCharactersMaxOffset = 1561;\r\n\r\nconst _getComicsMaxLimit = 100;\r\nexport const _getComicsBaseOffset = 0;\r\nexport const _getComicsMaxOffset = 1561;\r\n\r\nconst _maxShortedDescriptionLength = 190;\r\nfunction _getShortedDescription(description) {\r\n\tif (description.length <= _maxShortedDescriptionLength) {\r\n\t\treturn description;\r\n\t}\r\n\r\n\tlet words = description.split(' '), charLen = 0, i = 0;\r\n\twords.forEach((word, index) => {\r\n\t\tif (\r\n\t\t\tcharLen + word.length <= _maxShortedDescriptionLength &&\r\n\t\t\tindex - i <= 1\r\n\t\t) {\r\n\t\t\tcharLen += word.length;\r\n\t\t\ti = index;\r\n\t\t}\r\n\t})\r\n\treturn words.slice(0, i).join(' ') + '…';\r\n}\r\n\r\nconst _imgNotAvailableUrlParts = ['4c002e0305708', 'image_not_available']\r\nfunction _getThumbnailObj(thumbnail) {\r\n\tlet thumbnailObj = {\r\n\t\turl: thumbnail.path + '.' + thumbnail.extension,\r\n\t\tstyle: {}\r\n\t}\r\n\tif (_imgNotAvailableUrlParts.some(\r\n\t\turlPart => thumbnail.path.indexOf(urlPart) > -1\r\n\t)) {\r\n\t\tthumbnailObj.style.objectFit = 'contain';\r\n\t}\r\n\treturn thumbnailObj;\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useHttp() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst request = useCallback(async function(url, method='GET', body=null, \r\n\t\t\t\t\theaders={'Content-Type': 'application/json'}) {\r\n\t\tsetLoading(true);\r\n\t\tsetError(false);\r\n\t\tconst response = await fetch(url, {method, body, headers});\r\n\t\tif (!response.ok) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(true);\r\n\t\t\tthrow new Error(`Can't fetch url ${url}, error ${response.status}: ${response.statusText}`);\r\n\t\t}\r\n\t\tconst responseBody = await response.json();\r\n\t\tsetLoading(false);\r\n\t\tsetError(false);\r\n\t\treturn responseBody;\r\n\t}, []);\r\n\r\n\treturn {loading, error, request};\r\n}"],"names":["AnimatedAppearance","props","CSSTransition","timeout","classNames","children","AppBanner","className","src","avengersImg","alt","avengersLogo","ErrorMessage","errorGif","SingleComic","itemId","type","useMarvelService","loading","error","getComic","typeParams","char","getData","getCharacter","getBlock","getCharBlock","comic","getComicBlock","useState","data","setData","useEffect","then","spinner","Spinner","errorMessage","dataBlock","in","thumbnail","title","pageCount","description","language","price","url","style","to","SingleItemPage","parapms","useParams","useLocation","pathname","match","id","_apiBase","_apiKey","setLoading","setError","request","useCallback","method","body","headers","fetch","response","ok","Error","status","statusText","json","responseBody","useHttp","get","urlPrefix","getParametersObject","key","getParametersList","push","requestUrl","join","offsetDelta","limit","_getCharactersMaxLimit","offset","_getCharactersBaseOffset","_getCharactersMaxOffset","result","results","map","_getProcessedCharacter","name","nameStartsWith","charObj","urls","comics","_getThumbnailObj","homepageUrl","wikiUrl","shortedDescription","_getShortedDescription","items","_getComicsMaxLimit","_getComicsBaseOffset","_getComicsMaxOffset","_getProcessedComic","comicId","comicObj","prices","textObjects","getCharacters","getCharactersByNamePart","getComics","length","words","split","charLen","i","forEach","word","index","slice","_imgNotAvailableUrlParts","thumbnailObj","path","extension","some","urlPart","indexOf","objectFit"],"sourceRoot":""}